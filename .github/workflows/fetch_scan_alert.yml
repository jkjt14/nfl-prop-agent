name: NFL: Fetch → Scan → Alert

on:
  workflow_dispatch:
    inputs:
      fetch:
        description: "Fetch projections via Shiny first?"
        required: true
        type: boolean
        default: true
      threshold_ev:
        description: "EV threshold for alerts (e.g., 0.06)"
        required: false
        default: "0.06"
      profile:
        description: "Markets profile (base/heavy)"
        required: false
        default: "base"

jobs:
  fetch_projections:
    if: ${{ inputs.fetch }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Setup Chrome
        id: chrome
        uses: browser-actions/setup-chrome@v1

      - name: System libs for R 'curl' + headless chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libnss3 libasound2t64

      - name: Install minimal R deps
        run: |
          Rscript -e 'install.packages(c("chromote","fs","jsonlite"), repos="https://cloud.r-project.org")'

      - name: Create artifacts dir
        run: mkdir -p artifacts

      - name: Download projections CSV from Shiny
        env:
          FFA_SHINY_URL: https://ffashiny.shinyapps.io/newApp/
          FFA_DOWNLOAD_SELECTOR: 'a[data-export="projections"]'
          FFA_DOWNLOAD_TIMEOUT: "120"
          FFA_OUT: artifacts/projections.csv
          CHROMOTE_CHROME: ${{ steps.chrome.outputs.chrome-path }}
        run: Rscript scripts/ffa_shiny_download.R

      - name: Upload projections artifact
        uses: actions/upload-artifact@v4
        with:
          name: projections
          path: artifacts/projections.csv

  scan_and_alert:
    runs-on: ubuntu-latest
    needs: [fetch_projections]
    if: ${{ always() && ( !inputs.fetch || needs.fetch_projections.result == 'success' ) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create artifacts dir
        run: mkdir -p artifacts data

      - name: Download projections artifact (if fetched)
        if: ${{ inputs.fetch }}
        uses: actions/download-artifact@v4
        with:
          name: projections
          path: data

      - name: Show projections file
        run: |
          ls -l data || true
          if [ -f data/projections.csv ]; then
            echo "Found projections.csv"
            head -n 3 data/projections.csv || true
          elif [ -f data/raw_stats_current.csv ]; then
            echo "Falling back to raw_stats_current.csv"
          else
            echo "No projections file present; expecting data/projections.csv in repo if fetch=false."
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          # Minimal deps for the agent + alerts
          python -m pip install pandas numpy requests

      - name: Run scan + alert
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          EDGE_THRESHOLD: ${{ inputs.threshold_ev }}
          MARKETS_PROFILE: ${{ inputs.profile }}
          # Use the fetched artifact if present, else look for repo file
          PROJECTIONS_PATH: data/projections.csv
        run: |
          python agent_cli.py || exit 1

      - name: Upload edges artifact(s)
        uses: actions/upload-artifact@v4
        with:
          name: edges
          path: |
            artifacts/edges.csv
            artifacts/advice.txt
